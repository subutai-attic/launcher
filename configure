#!/bin/bash

helpmessage()
{
cat <<ENDOFMSG
usage: configure [options]
Configuration script for Subutai Launcher on Linux and MacOS platforms. 

Options:
    --help
      Displays this help message.

    --python=<version>
      Specify a version of python to use. Example:
      --python=3.6m

    --no-tests
      Disable building of tests

    --no-ui
      Disable building of UI client

    --no-cli
      Disable build of CLI client

    --static 
      Build only static library (disables shared)

    --shared 
      Build only shared library (disabled static)

ENDOFMSG
exit
}

tests=1
static=0
shared=0
python="python2.7"
pylib=""
py_header=""

check_python()
{
    echo -n "Looking for libpython$1.so library path... "

    pypath=`find /usr/lib -name "libpython$1.so"`
    if [[ ( $? != 0 ) || ( -z "$pypath" ) ]]; then
        echo "ERROR: Failed to find path to python library"
    else
        pylib=`dirname $pypath`
        echo "OK [$pylib]"
    fi
}

check_python_header() 
{
    echo -n "Looking for Python.h... "

    local py_header_dir=`find /usr/include -name "python$1" -type d`
    if [ $? != 0 ]; then
        echo -e "FAIL"
        echo -e "Couldn't find python$1 directory under /usr/include"
        exit
    fi
    local py_header_path=`find $py_header_dir -name 'Python.h'`
    if [ $? != 0 ]; then
        echo -e "FAIL"
        echo -e "Couldn't find Python.h in $py_header_dir"
        exit
    fi
    py_header=`dirname $py_header_path`
    echo -e "OK [$py_header]"
}

while [ $# -ge 1 ]; do

    case "$1" in
        --python=*)
            python="`echo ${1} | awk '{print substr($0,10)}' | tr ',;' '  '`" 
            ;;

        --static)
            static=1
            ;;

        --shared)
            shared=1
            ;;

        --no-tests)
            tests=0
            ;;

        --help)
            helpmessage ;;
        *)
            echo "Unrecongnized arguments"
            echo ""
            helpmessage ;;
    esac

    shift
done

check_python_header $python
check_python $python

echo "# generated by configure script" > config.make
# TODO: Remove hardcoded 'python' prefix
echo "PYTHON_VER = python$python" >> config.make
echo "PYLIB_DIR = $pylib" >> config.make
echo "PYLIB_HEADER_DIR = $py_header" >> config.make
if [ $shared -eq 0 ]; then
    if [ $static -eq 1 ]; then
        echo "STATIC_BUILD = 1" >> config.make
    else
        echo "SHARED_BUILD = 1" >> config.make
    fi
else
    echo "SHARED_BUILD = 1" >> config.make
    if [ $static -eq 1 ]; then
        echo "STATIC_BUILD = 1" >> config.make
    fi
fi
if [ $tests -eq 1 ]; then
    echo "BUILD_TESTS = 1" >> config.make
fi
cat <<__EOF__ >>config.make
export PYTHON_VER
export PYLIB_DIR
export PYLIB_HEADER_DIR
export STATIC_BUILD
export SHARED_BUILD
export BUILD_TESTS
__EOF__
